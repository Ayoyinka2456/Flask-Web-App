---
- name: Setup Flask environment
  hosts: all
  become: true
  remote_user: root
  
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      when: ansible_pkg_mgr == "apt"

    # - name: Update package manager cache
    #   block:
        # - name: Update yum cache
        #   yum:
        #     update_cache: yes
        #   when: ansible_pkg_mgr == "yum"
    
      #   - name: Update dnf cache
      #     dnf:
      #       update_cache: yes
      #     when: ansible_pkg_mgr == "dnf"
      # become: true

    - name: Install necessary packages for apt
      apt:
        name:
          - python3-pip
          - python3-dev
          - build-essential
          - python3-venv
          - git
          - ufw
        state: present
      when: ansible_pkg_mgr == "apt"

    - name: Install necessary packages for yum
      dnf:
        name:
          - python3-pip
          - python3-devel
          - python3-venv
          - git
          - firewalld
        state: present
      when: ansible_pkg_mgr == "dnf"

    - name: Create a directory
      file:
        path: flask_dir
        state: directory
        mode: 0755
    
    - name: Create virtual environment
      command: python3 -m venv flask_dir/.myenv
      args:
        chdir: "~/"

    - name: Activate virtual environment
      command: /bin/bash -c "source flask_dir/.myenv/bin/activate"
      args:
        chdir: "~/"

    - name: Install flask using pip
      pip:
        name: flask
        executable: ~/flask_dir/.myenv/bin/pip
        state: present

    - name: Allow incoming traffic on port 5000
      ufw:
        rule: allow
        proto: tcp
        port: 5000
        comment: "Allow incoming traffic to Flask app"
      when: ansible_pkg_mgr == "apt"

    - name: Restart UFW
      systemd:
        name: ufw
        state: restarted
      when: ansible_pkg_mgr == "apt"

    - name: Allow incoming traffic on port 5000
      command: firewall-cmd --zone=public --add-port=5000/tcp --permanent
      become: true  # This command requires elevated privileges
      when: ansible_pkg_mgr == "yum"

    - name: Reload firewalld
      command: firewall-cmd --reload
      become: true
      when: ansible_pkg_mgr == "yum"
